// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class MarketRegistered extends ethereum.Event {
  get params(): MarketRegistered__Params {
    return new MarketRegistered__Params(this);
  }
}

export class MarketRegistered__Params {
  _event: MarketRegistered;

  constructor(event: MarketRegistered) {
    this._event = event;
  }

  get baseAsset(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get quoteAsset(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class MarketUpdated extends ethereum.Event {
  get params(): MarketUpdated__Params {
    return new MarketUpdated__Params(this);
  }
}

export class MarketUpdated__Params {
  _event: MarketUpdated;

  constructor(event: MarketUpdated) {
    this._event = event;
  }

  get baseAsset(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get quoteAsset(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Router extends ethereum.SmartContract {
  static bind(address: Address): Router {
    return new Router("Router", address);
  }

  marketAddress(_baseAsset: Address, _qutoeAsset: Address): Address {
    let result = super.call(
      "marketAddress",
      "marketAddress(address,address):(address)",
      [
        ethereum.Value.fromAddress(_baseAsset),
        ethereum.Value.fromAddress(_qutoeAsset)
      ]
    );

    return result[0].toAddress();
  }

  try_marketAddress(
    _baseAsset: Address,
    _qutoeAsset: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "marketAddress",
      "marketAddress(address,address):(address)",
      [
        ethereum.Value.fromAddress(_baseAsset),
        ethereum.Value.fromAddress(_qutoeAsset)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  markets(param0: Bytes): Address {
    let result = super.call("markets", "markets(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toAddress();
  }

  try_markets(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall("markets", "markets(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AnyToAnySwapCall extends ethereum.Call {
  get inputs(): AnyToAnySwapCall__Inputs {
    return new AnyToAnySwapCall__Inputs(this);
  }

  get outputs(): AnyToAnySwapCall__Outputs {
    return new AnyToAnySwapCall__Outputs(this);
  }
}

export class AnyToAnySwapCall__Inputs {
  _call: AnyToAnySwapCall;

  constructor(call: AnyToAnySwapCall) {
    this._call = call;
  }

  get _route(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _isBuy(): Array<boolean> {
    return this._call.inputValues[1].value.toBooleanArray();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AnyToAnySwapCall__Outputs {
  _call: AnyToAnySwapCall;

  constructor(call: AnyToAnySwapCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RegisterMarketCall extends ethereum.Call {
  get inputs(): RegisterMarketCall__Inputs {
    return new RegisterMarketCall__Inputs(this);
  }

  get outputs(): RegisterMarketCall__Outputs {
    return new RegisterMarketCall__Outputs(this);
  }
}

export class RegisterMarketCall__Inputs {
  _call: RegisterMarketCall;

  constructor(call: RegisterMarketCall) {
    this._call = call;
  }

  get _baseAsset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _quoteAsset(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _marketAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RegisterMarketCall__Outputs {
  _call: RegisterMarketCall;

  constructor(call: RegisterMarketCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetMarginAccountCall extends ethereum.Call {
  get inputs(): SetMarginAccountCall__Inputs {
    return new SetMarginAccountCall__Inputs(this);
  }

  get outputs(): SetMarginAccountCall__Outputs {
    return new SetMarginAccountCall__Outputs(this);
  }
}

export class SetMarginAccountCall__Inputs {
  _call: SetMarginAccountCall;

  constructor(call: SetMarginAccountCall) {
    this._call = call;
  }

  get _marginAccount(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMarginAccountCall__Outputs {
  _call: SetMarginAccountCall;

  constructor(call: SetMarginAccountCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateMarketCall extends ethereum.Call {
  get inputs(): UpdateMarketCall__Inputs {
    return new UpdateMarketCall__Inputs(this);
  }

  get outputs(): UpdateMarketCall__Outputs {
    return new UpdateMarketCall__Outputs(this);
  }
}

export class UpdateMarketCall__Inputs {
  _call: UpdateMarketCall;

  constructor(call: UpdateMarketCall) {
    this._call = call;
  }

  get _baseAsset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get quoteAsset(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _marketAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class UpdateMarketCall__Outputs {
  _call: UpdateMarketCall;

  constructor(call: UpdateMarketCall) {
    this._call = call;
  }
}
